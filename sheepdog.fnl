;; title:  Sheepdog
;; author: Stephen Wassell
;; desc:   short description
;; script: fennel

(macro xy [x y] `{:x ,x :y ,y})
(macro wh [w h] `{:w ,w :h ,h})
(macro xywh [x y w h] `{:x ,x :y ,y :w ,w :h ,h})

(fn setxy [dst src]
  (set dst.x src.x)
  (set dst.y src.y))

(fn xy* [v m] (xy (* v.x m) (* v.y m)))
(fn xy/ [v d] (xy (/ v.x d) (/ v.y d)))
(fn xy+ [a b] (xy (+ a.x b.x) (+ a.y b.y)))
(fn xy- [a b] (xy (- a.x b.x) (- a.y b.y)))
(fn xy0? [v] (= v.x v.y 0))

(fn magnitude [v]
  (math.sqrt (+ (* v.x v.x) (* v.y v.y))))

(fn normalise [v mag]
  "Normalise vector to a given magnitude."
  (let [scale (magnitude v)]
    (if
      (< scale 1) (xy 0 0) ; Avoid divide by 0 and excessive wiggling.
      (xy* (xy/ v scale) mag))))

(fn xy-random []
  (xy (- (math.random) .5) (- (math.random) .5)))

; TIC-80 screen size.
(local screen (wh 240 136))

; Background of the map and transparent sprites - dark green.
(local bg-colour 5)

; Incremented on each frame.
(var t 0)

; Tables of entity id => closure.
; These are called on each frame in this order.
(var fns-update {}) ; id (fn [])
(var fns-move-away {})
(var fns-draw {}) ; id { :z z :f (fn []) }
; Call to check if the provides coords collide with each entity in the table.
; (var collides {}) ; id (fn [x y w h])

(macro ++ [n]
  "Increment n and return the new value."
  `(do
    (set ,n (+ ,n 1))
    ,n))

(global TIC
  (fn tic []
    "The main game loop. On each frame call all updaters then all drawers."
    (each [_ f (pairs fns-update)] (f))
    ; todo: will this work? needs to be ipairs?
    (table.sort fns-draw #(< $1.z $2.z))
    (each [_ i (pairs fns-draw)] (i.f))
    (++ t)))

(fn xy-to-z [c]
  "Calculate z-index from x and y coords. todo: is 0 fg or bg?"
  ((+ (* c.y 512) c.x)))

; (fn any-collides [this check-id prev-id]
;   "Return x and y multipliers if the provided coords collide with any other entity."
;   ; Get the first/next collide closure. The prev-id param is initially nil.
;   (local next-id (next collides prev-id))
;   ; Iterate with tail recursion if entity check-id didn't collide with next-id.
;   (if
;     (= next-id nil) (xy 1 1) ; Reached end of list with no collisions.
;     (= next-id check-id) (any-collides this check-id next-id) ; Don't collide with itself.
;     (let [mult ((. collides next-id) this)]
;       (if (= mult.x mult.y 1)
;         (any-collides this check-id next-id) ; This didn't collide.
;         mult)))) ; Found a collision, return multipliers.

(local unique-id ((fn [] ; Note double ( to call the closure immediately.
  "Return a closure which increments id and returns the new value. Call in constructors."
  (var id 0)
  (fn [] (++ id)))))

(fn new-map []
  "Create a new map object: draw the background, check for screen edge collisions."
  (local id (unique-id))

  (tset fns-draw id { :z 0 :f (fn map-draw []
    (cls bg-colour)) } )

  ; (tset collides id (fn map-collider [other]
  ;   "Return x and y multipliers to apply to the other entity, (1 1) for no collision."
  ;   (xy
  ;     ; Horizontal bounce
  ;     (if (or (< other.x 0) (> (+ other.x other.w -1) screen.w)) -.5 1)
  ;     ; Vertical bounce
  ;     (if (or (< other.y 0) (> (+ other.y other.h -1) screen.h)) -.5 1)))))
)

(fn buttons []
  "List of 0/1 for buttons pressed: up down left right"
  (values
    (if (btn 0) 1 0)
    (if (btn 1) 1 0)
    (if (btn 2) 1 0)
    (if (btn 3) 1 0)))

(fn to-mouse [from]
  "Return vector from x y to mouse, if any buttons pressed (else 0 0)."
  (local (mouse-x mouse-y left middle right scrollx scrolly) (mouse))
  (if
    (or left middle right) (xy (- mouse-x from.x) (- mouse-y from.y))
    (xy 0 0)))

(fn get-action [from accel]
  "Return direction to move player based on buttons and mouse, normalised to magnitude accel."
  ; up down left right
  (let [dir (match (buttons)
      (1 0 0 0) (xy 0 -1)
      (0 1 0 0) (xy 0 1)
      (0 0 1 0) (xy -1 0)
      (0 0 0 1) (xy 1 0)
      (1 0 1 0) (xy -1 -1)
      (1 0 0 1) (xy 1 -1)
      (0 1 1 0) (xy -1 1)
      (0 1 0 1) (xy 1 1)
      _ (to-mouse from))] ; No buttons pressed, go towards mouse.
    (normalise dir accel)))

(fn center [me]
  "The center of a sprite given x y w h."
  (xy (+ me.x (/ me.w 2)) (+ me.y (/ me.h 2))))

(fn alternate [s]
  "Alternate between s and s+1 for running feet and wagging tails."
  (+ s (/ (% t 24) 12)))

(fn moving [d]
  "True if we need the sprite for moving, given pixels per frame."
  (or (> (math.abs d.x) .1) (> (math.abs d.y) .1)))

(fn stay-in-field [me]
  (let [w (- screen.w me.w) h (- screen.h me.h)]
    (when (< me.x 0) (set me.x 0))
    (when (> me.x w) (set me.x w))
    (when (< me.y 0) (set me.y 0))
    (when (> me.y h) (set me.y h))))

(fn sprite-draw [me vel sprite flip]
  "Update x y from dx dy and draw the sprite there."
  (setxy me (xy+ me vel))
  (stay-in-field me)
  (spr (alternate sprite) me.x me.y bg-colour 1 flip))

; (fn sprite-collider [other me]
;   "Return x and y multipliers to apply to the other entity, (1 1) for no collision."
;   ; todo: fix getting stuck in each other - when affected by bounce?
;   ; Coords of other entity relative to this one.
;   (let [rx (- other.x me.x) ry (- other.y me.y)]
;     (if
;       ; Check for no collision: left right top bottom.
;       (or (< (+ rx other.w -1) 0) (> rx me.w) (< (+ ry other.h -1) 0) (> ry me.h))
;         (xy 1 1)
;       ; There's a collision, check if it's top/bottom or left/right:
;       ; Imagine an X shape centered at x y. Which segment is tx ty in?
;       ; This is simplified, assumes both entities are the same size. todo: is that sufficient?
;       (let [grad (/ me.h me.w)] ; Gradient of the arms of the X.
;         (if
;           (= (< ry (* grad rx)) (< ry (* -1 grad rx)))
;             (xy 1 -.5) ; top/bottom
;           (xy -.5 1)))))) ; left/right

; (var to-player nil) ; Will be set to a method of player.

(fn new-player []
  "Create a new player object: respond to keys, draw on the foreground."
  (local id (unique-id))
  
  ; Size of the dog. todo: shorter than this
  ; Current location, updated in drawer.
  (var me (xywh
    (/ (- screen.w 8) 2) (/ (- screen.h 8) 2)
    8 8))

  ; Current velocity in pixels per frame, updated in updater.
  (var vel (xy 0 0))

  ; Images face left. Set to 1 when moving right to flip the sprite.
  (var flip 0)

  ; How fast can it run.
  (local accel .15)
  (local friction .9)

  ; Sprite indices, also +1 to each for alternate.
  (local spr-run 272)
  (local spr-idle 274)
  (var sprite spr-idle)

  ; (set to-player (fn [from] (xy- me from)))

  (tset fns-move-away id (fn sheep-move-away [from]
    (let [away (xy- from me)]
      (if (< (magnitude away) 50)
        (normalise away 1)
        (xy 0 0)))))

  (tset fns-update id (fn player-update []
    "Update vel based on buttons and mouse."
    (local (action) (get-action (center me) accel))

    (when (~= action.x 0)
      (set flip (if (> action.x 0) 1 0))) ; Use ax not dx to avoid wiggling.
    (set sprite (if (or (~= action.x 0) (~= action.y 0)) spr-run spr-idle))
    (set vel (xy* (xy+ vel action) friction))))
    ; Check if it would bounce off anything.
    ; (local mult (any-collides (xywh (+ me.x vel.x) (+ me.y vel.y) me.w me.h) id))
    ; (set vel (xy (* vel.x mult.x) (* vel.y mult.y)))))

  (tset fns-draw id { :z 1 :f (fn player-draw []
    (sprite-draw me vel sprite flip)) } )

  ; (tset collides id (fn player-collider [other]
  ;   (sprite-collider other me))))
)

(fn find-space [size]
  "Find a random location with no collisions within a border area."
  (local x (math.random (- screen.w size.w)))
  (local y (math.random (- screen.h size.h)))
  (xy x y))
  ; (local border 8)
  ; (match (any-collides (xywh (- x border) (- y border) (+ size.w (* 2 border)) (+ size.h (* 2 border))))
  ;   {:x 1 :y 1} (xy x y)
  ;   _ (find-space size))) ; Bad choice, recurse to try again.

(fn new-sheep []
  "Create a new sheep object."
  (local id (unique-id))
  
  (var me (find-space (wh 8 8)))
  (set me.w 8)
  (set me.h 8)

  (var vel (xy 0 0))
  (var flip 0)

  (local accel .15)
  (local friction .9)

  (local spr-run 256)
  (local spr-idle 258)
  (var sprite spr-idle)

  ; todo: replace with boids, no more hard collisions except boundary
  ; all entities have an away-from method, other xywh => xy away if close enough else 0,0
  ; sheep sum all those + xy to center of flock (average sheep xy from last frame)

  (tset fns-move-away id (fn sheep-move-away [from]
    (let [away (xy- from me) mag (magnitude away)]
      (if
        (> mag 10) (xy 0 0)
        (if
          (< mag 2) (normalise (xy-random) 1) ; todo: still getting stuck together
          (normalise away 1))))))

  (tset fns-update id (fn sheep-update []
    "Escape player and todo: go towards flock"
    ; (local tp (to-player me))
    ; (local action (normalise tp (- 0 accel))) ; escape player

    (var action (xy 0 0))
    (each [it f (pairs fns-move-away)]
      (when (~= it id) (setxy action (xy+ action (f me)))))
    (setxy action (normalise action accel))

    (when (~= action.x 0)
      (set flip (if (> action.x 0) 1 0))) ; Use ax not dx to avoid wiggling.
    (set sprite (if (or (~= action.x 0) (~= action.y 0)) spr-run spr-idle))
    (set vel (xy (* friction (+ vel.x action.x)) (* friction (+ vel.y action.y))))))
    ; Check if it would bounce off anything.
    ; (local mult (any-collides (xywh (+ me.x vel.x) (+ me.y vel.y) me.w me.h) id))
    ; (set vel (xy (* vel.x mult.x) (* vel.y mult.y)))))

  (tset fns-draw id { :z 1 :f (fn sheep-draw []
    (sprite-draw me vel sprite flip)) } )

  ; (tset collides id (fn sheep-collider [other]
  ;   (sprite-collider other me))))
)

; Create the persistent entities.
(new-map)
(new-player)
(for [_ 1 10] (new-sheep))

;; <TILES>
;; 001:efffffffff222222f8888888f8222222f8fffffff8ff0ffff8ff0ffff8ff0fff
;; 002:fffffeee2222ffee88880fee22280feefff80fff0ff80f0f0ff80f0f0ff80f0f
;; 003:efffffffff222222f8888888f8222222f8fffffff8fffffff8ff0ffff8ff0fff
;; 004:fffffeee2222ffee88880fee22280feefff80ffffff80f0f0ff80f0f0ff80f0f
;; 017:f8fffffff8888888f888f888f8888ffff8888888f2222222ff000fffefffffef
;; 018:fff800ff88880ffef8880fee88880fee88880fee2222ffee000ffeeeffffeeee
;; 019:f8fffffff8888888f888f888f8888ffff8888888f2222222ff000fffefffffef
;; 020:fff800ff88880ffef8880fee88880fee88880fee2222ffee000ffeeeffffeeee
;; </TILES>

;; <SPRITES>
;; 000:5ffff555f0f0ff55fffffcf55fffccff55cccfff55ffffff555fffff55550505
;; 001:5ffff555f0f0ff55fffffcf55fffccff55cccfff55ffffff555fffff55505550
;; 002:55555555555555555555fff5555fcfff5ffffcfffffffcfff0f0ffff5fff0505
;; 003:55555555555555555555fff55fffcffffffffcfff0f0fcff5fffffff55550505
;; 016:5505055555000555c0d0d055c0000f0555fff00055000005555000055555f5f5
;; 017:5505055555000555c0d0d055c0000f0555fff0005500000555500005555f555f
;; 018:5505055555000555c0d0d055c0000f0555fff00055000005555000055555f5f5
;; 019:5505055555000555c0d0d055c0000f0555fff00555000000555000055555f5f5
;; </SPRITES>

;; <MAP>
;; 000:00000000000000ffff00000000ffffffff0123456789ab00effe00ba987600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c22d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500002000000100002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013
;; 003:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050
;; 004:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ea
;; 008:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000095
;; 009:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003383000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027
;; 010:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e23c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a5
;; 011:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007783000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057
;; 012:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000344700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008300c100a80100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000095
;; 013:00000000000000000000000000000000000000000000000000000000000005b50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ba8300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c0000000047000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4
;; 014:00000000000000000000000000000000000000000000000000000000000056c60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008300b2009808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b5
;; 015:0000000000000000000000000000000000000000000000000000000000000be5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab0a6074011600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 016:000000000000000000000000000000000000000000000000000000000000f5f500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 017:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 018:0000000000000000000000000000000000000000000000000000000000008d130000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000a600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 019:000000000000000000000000000000000000000000000000000000000000099500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 020:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 021:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 022:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085c764018100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 030:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006fcf008f00000000000000000000000000000000000000000000016400
;; 031:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000010000
;; 032:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022953500440000000000000083c37401000000006400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008600000000000000000000000000000000000000000000016400
;; 033:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007bfcf00859f64012295350044000000000000000c4d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000004400
;; 034:00000000000000000000000000000000000000000000000000000000000044000000000000000caa7401086554016400000007bfcf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008a1c64018f5274016400000007bfcf000c9b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c6963700000000000000000000000000000000000000000000471626
;; 035:c600000000000000000000000000000000000000000000000000000000000202020266f62702b6c2020716470296e602071696273700000000000000000000000000000000000000000000000000000000000000000000000000000000000000020202020296660282f5f566e6c6f576c6f62616c6f5f5370000000000000000000000000000000000000000000000000000000096e6768207164792929202478656e6a002020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000004602275600000000000000000000000000000000000000000000f63796
;; 036:4700000000000000000000000000000000000000000000000000000000002696e64696e67637c202071647475627e6b582b602b2020000000000000000000000000000000000000000000000000000000000e637562747822696e64696e67637c202b7c6963747823797d682723756c65636477292c202b60000000000000000000000000000000000000000000000000000000057e6071636b67292c2023797d68272471626c656e257e6071636b6729292c2026716c692000000000000000000000000000000000000000000000000000000272202d3000000000000000000000000000000000000000000000247f6
;; 037:370000000000000000000000000000000000000000000000000000000000e6a0020202020202020202022756475727e602e696c6a0020202020202020256c63756a002020202020202020202c6f63616c6023757266716c602d302c6963747823797d68272e27292c2026716c6c202b692a00202020202020000000000000000000000000000000000000000000000000000000096e64696e6763702d302d616473686f5071647475627e682b73757266716c6d7c2020700000000000000000000000000000000000000000000000000000002471626c6000000000000000000000000000000000000000000002636f6
;; 038:e6000000000000000000000000000000000000000000000000000000000002960716962737823757262696e64696e67637920246f6a0020202020202020202020202471626c656e296e637562747822696e64696e67637c2022692000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0020202020202f573f58292a00202020256e646a0020202022756475727e60236f6e6000000000000000000000000000000000000000000000000000000005000880000000000000000000000000000000000000000000000000000
;; 039:000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000000000000000000008f73740171c63500640000008d6364018953640122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007bfcf008300000000000000000000000000000000000000000000000000
;; 040:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b7401830000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 041:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006401894374000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 043:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 045:050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003ef7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 046:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001fffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 047:e40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 050:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000440000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; </MAP>

;; <PALETTE>
;; 000:140c1c44243430346d4e4a4e854c30346524d04648757161597dced27d2c8595a16daa2cd2aa996dc2cadad45edeeed6
;; </PALETTE>

